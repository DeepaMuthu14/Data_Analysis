import pandas as pd
from scipy.stats import f_oneway


df = pd.read_csv('UT.csv')

cols = ['Task_Duration', 'Number_of_Errors', 'Help_Requests', 'SUS']
print(df.groupby('Group')[cols].agg(['mean', 'std']))



# Task Duration: Difference between the groups with a guide and without a guide
t_task, p_task = ttest_ind(df[df['Group']=='A']['Task_Duration'],
                           df[df['Group']=='B']['Task_Duration'],
                           equal_var=False)
print(f"T-test Task Duration: t={t_task:.2f}, p={p_task:.4f}")


t_sus, p_sus = ttest_ind(df[df['Group']=='A']['SUS'],
                         df[df['Group']=='B']['SUS'],
                         equal_var=False)
print(f"T-test SUS Score: t={t_sus:.2f}, p={p_sus:.4f}")

# System response
t_sys, p_sys = ttest_ind(df[df['Group']=='A']['System_Response'],
                         df[df['Group']=='B']['System_Response'],
                         equal_var=False)
print(f"T-test System Response: t={t_sys:.2f}, p={p_sys:.4f}")

# User interface satisfaction
t_ui, p_ui = ttest_ind(df[df['Group']=='A']['UI_Satisfaction'],
                       df[df['Group']=='B']['UI_Satisfaction'],
                       equal_var=False)
print(f"T-test UI Satisfaction: t={t_ui:.2f}, p={p_ui:.4f}")

# Overall experience
t_oe, p_oe = ttest_ind(
    df[df['Group'] == 'A']['Overall_Experience'],
    df[df['Group'] == 'B']['Overall_Experience'],
    equal_var=False  # Welch's t-test
)
print(f"T-test Overall_Experience: t={t_oe:.2f}, p={p_oe:.4f}")

# Hypothesis: There is a relationship between task duration and SUS score
import scipy.stats as stats
from scipy.stats import shapiro
from scipy.stats import pearsonr

r_value, p_value = pearsonr(df['Task_Duration'], df['SUS'])

print("Correlation between Task Duration and SUS:")
print(f"r = {r_value:.2f}, p = {p_value:.4f}")

# Hypothesis: There is a relationship between user interface satisfaction and SUS score
r_value, p_value = pearsonr(df['UI_Satisfaction'], df['SUS'])

print("Correlation between UI_Satisfaction and SUS:")
print(f"r = {r_value:.2f}, p = {p_value:.4f}")

# Hypothesis: There is a relationship between overall experience and SUS score
r_value, p_value = pearsonr(df['Overall_Experience'], df['SUS'])

print("Correlation between Overall_Experience and SUS:")
print(f"r = {r_value:.2f}, p = {p_value:.4f}")

# Average error, Time  duration, Help request
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


df = pd.read_csv('UT.csv') 



# Calculate averages for each group
group_avg = df.groupby('Group').agg({
    'Task_Duration': 'mean',
    'Number_of_Errors': 'mean',
    'Help_Requests': 'mean'
}).reset_index()

# Visualize the comparisons between Group A and Group B using bar plots
plt.figure(figsize=(12, 8))

# Task Duration Comparison
plt.subplot(2, 2, 1)
sns.barplot(x='Group', y='Task_Duration', data=group_avg, hue='Group', palette='Blues', legend=False)
plt.title('Average Task Duration')
plt.ylabel('Average Time (mins)')

# Number of Errors Comparison
plt.subplot(2, 2, 2)
sns.barplot(x='Group', y='Number_of_Errors', data=group_avg, hue='Group', palette='Blues', legend=False)
plt.title('Average Number of Errors')
plt.ylabel('Average Number of Errors')

# Help Requests Comparison
plt.subplot(2, 2, 3)
sns.barplot(x='Group', y='Help_Requests', data=group_avg, hue='Group', palette='Blues', legend=False)
plt.title('Average Help Requests')
plt.ylabel('Average Number of Help Requests')

# Summary table
table_data = group_avg[['Group', 'Task_Duration', 'Number_of_Errors', 'Help_Requests']].round(2)
table_data = table_data.set_index('Group')

# Add the summary table to the plot
plt.subplot(2, 2, 4)
plt.axis('off')
plt.table(cellText=table_data.values, colLabels=table_data.columns, cellLoc='center', loc='center', colColours=['#DCE6F1']*len(table_data.columns))

# plots
plt.tight_layout()
plt.show()

